global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon
	tune.ssl.default-dh-param 2048
	maxconn 2048

	# Default SSL material locations
#	ca-base /etc/ssl/certs
#	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# An alternative list with additional directives can be obtained from
	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
#	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
#	ssl-default-bind-options no-sslv3

defaults
	log	global
	mode	http
	option forwardfor
        option http-server-close
	option	httplog
	option	dontlognull
	timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http
frontend www
	bind *:80
#	bind *:443
	reqadd X-Forwarded-Proto:\ http
    	default_backend wwwbackend
#### following lines will create ssl bindings
frontend wwws
   bind 192.168.2.35:443 ssl crt /etc/ssl/private/hpy.pem
   reqadd X-Forwarded-Proto:\ https
   default_backend wwwbackend
backend	wwwbackend
	server sample 192.168.2.65:80 check
	redirect scheme https if !{ ssl_fc }
#	http-request set-header X-Forwarded-Port %[dst_port]
 #   http-request add-header X-Forwarded-Proto https if { ssl_fc }
	

